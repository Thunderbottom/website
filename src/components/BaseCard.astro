---
interface Props {
  href?: string;
  class?: string;
  tabindex?: number;
  role?: string;
  "aria-label"?: string;
  "data-photo-trigger"?: boolean;
  "data-full-image"?: string;
  "data-title"?: string;
  "data-content"?: string;
}

const {
  href,
  class: className = "",
  tabindex,
  role,
  "aria-label": ariaLabel,
  "data-photo-trigger": dataPhotoTrigger,
  "data-full-image": dataFullImage,
  "data-title": dataTitle,
  "data-content": dataContent,
  ...rest
} = Astro.props;

// Base card styling that's shared across all card components
const baseCardClasses =
  "group relative border border-border bg-card transition-all duration-200 hover:border-text-secondary hover:shadow-sm dark:border-border-dark dark:bg-card-dark dark:hover:border-text-secondary-dark";

const combinedClasses = `${baseCardClasses} ${className}`;

// Dynamic attributes object
const dynamicAttrs: Record<string, any> = {
  class: combinedClasses,
  ...rest,
};

if (tabindex !== undefined) dynamicAttrs.tabindex = tabindex;
if (role) dynamicAttrs.role = role;
if (ariaLabel) dynamicAttrs["aria-label"] = ariaLabel;
if (dataPhotoTrigger) dynamicAttrs["data-photo-trigger"] = dataPhotoTrigger;
if (dataFullImage) dynamicAttrs["data-full-image"] = dataFullImage;
if (dataTitle) dynamicAttrs["data-title"] = dataTitle;
if (dataContent) dynamicAttrs["data-content"] = dataContent;
---

{
  href ? (
    <a href={href} {...dynamicAttrs}>
      <slot />
    </a>
  ) : (
    <div {...dynamicAttrs}>
      <slot />
    </div>
  )
}
