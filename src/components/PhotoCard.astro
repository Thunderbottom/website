---
import type { CollectionEntry } from "astro:content";
import { formatDate } from "@lib/utils";
import {
  generatePhotoImages,
  extractExifData,
  formatExifItems,
} from "@lib/photo-utils";

interface Props {
  entry: CollectionEntry<"photography">;
}

const { entry } = Astro.props;
const { data } = entry;

const photoImage = await import(
  `../content/photography/images/${data.image}.jpg`
);
const { thumbnailImage, lightboxImage } = await generatePhotoImages(
  photoImage.default,
);

const exifData = await extractExifData(
  `./src/content/photography/images/${data.image}.jpg`,
);
const exifItems = formatExifItems(exifData);

const formattedDate = formatDate(new Date(data.date), "%B %d, %Y");
---

<div
  class="group relative flex flex-col rounded-lg border border-border dark:border-border-dark bg-card dark:bg-card-dark hover:border-text-secondary dark:hover:border-text-secondary-dark hover:bg-gray-50 dark:hover:bg-gray-800 transition-all duration-300 hover:-translate-y-0.5 hover:shadow-md overflow-hidden"
>
  <div
    class="relative cursor-pointer"
    data-photo-trigger
    data-full-image={lightboxImage.src}
    data-title={data.title}
    data-content={entry.body}
  >
    <img
      src={thumbnailImage.src}
      alt={data.title}
      width={thumbnailImage.attributes.width}
      height={thumbnailImage.attributes.height}
      class="w-full h-auto object-contain transition-transform duration-300"
      loading="lazy"
      decoding="async"
      fetchpriority="low"
    />

    <div
      class="absolute inset-0 bg-black/0 group-hover:bg-black/10 transition-colors duration-300 flex items-center justify-center"
    >
      <div
        class="opacity-0 group-hover:opacity-100 transition-opacity duration-300 bg-white/90 dark:bg-black/90 rounded-full p-2"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="text-text-primary dark:text-text-primary-dark"
          aria-hidden="true"
        >
          <line x1="12" y1="5" x2="12" y2="19"></line>
          <line x1="5" y1="12" x2="19" y2="12"></line>
        </svg>
      </div>
    </div>
  </div>

  <div class="flex items-start gap-4 p-4">
    <div class="flex-1 min-w-0">
      <div class="flex items-start justify-between gap-4 mb-2">
        <div
          class="font-display text-lg font-semibold text-text-primary dark:text-text-primary-dark group-hover:text-link dark:group-hover:text-link-dark transition-colors"
        >
          {data.title}
        </div>
        <time
          datetime={new Date(data.date).toISOString()}
          class="text-sm text-text-secondary dark:text-text-secondary-dark whitespace-nowrap"
        >
          {formattedDate}
        </time>
      </div>

      {
        exifItems.length > 0 && (
          <div class="flex flex-wrap gap-2 text-xs justify-center">
            {exifItems.map((item) => (
              <span class="px-2 py-1 rounded-md font-mono bg-gray-200 dark:bg-gray-700 text-text-secondary dark:text-text-secondary-dark">
                {item}
              </span>
            ))}
          </div>
        )
      }
    </div>
  </div>
</div>
