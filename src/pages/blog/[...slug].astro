---
import { getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import FormattedDate from "@components/FormattedDate.astro";
import BackToPrev from "@components/BackToPrev.astro";
import Message from "@components/Message.astro";
import Sidenote from "@components/Sidenote.astro";

export const prerender = true;

// Get all blog entries
export async function getStaticPaths() {
  const blogEntries = await getCollection("blog", ({ data }) => {
    return !data.draft;
  });

  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

// Get the blog post data
const { entry } = Astro.props;
const { Content, headings, remarkPluginFrontmatter } = await entry.render();

// Use reading time from remark plugin (falls back to default if not available)
const readingTime = remarkPluginFrontmatter?.minutesRead || "1 min read";

// Define custom components for rendering
const components = {
  Message,
  Sidenote,
};
---

<PageLayout
  title={entry.data.title}
  description={entry.data.description || entry.data.summary}
  currentPath={`/blog/${entry.slug}/`}
>
  <Container>
    <div class="space-y-8">
      <div class="animate">
        <BackToPrev href="/blog"> Back to blog </BackToPrev>
      </div>

      <div class="space-y-4">
        <div
          class="animate flex items-center gap-2 text-sm text-text-secondary dark:text-text-secondary-dark"
        >
          <FormattedDate date={entry.data.date} format="%B %d, %Y" />
          <span>•</span>
          <span>{readingTime}</span>
          {
            entry.data.last_modified_at && (
              <>
                <span>•</span>
                <span>
                  Updated:{" "}
                  <FormattedDate
                    date={entry.data.last_modified_at}
                    format="%B %d, %Y"
                  />
                </span>
              </>
            )
          }
        </div>

        <div class="animate">
          <h1
            class="font-display text-3xl font-semibold leading-tight text-text-primary"
          >
            {entry.data.title}
          </h1>
        </div>
      </div>

      <article class="animate prose prose-lg max-w-none">
        <Content components={components} />
      </article>

      <div class="animate border-t border-border pt-8 text-center">
        <p class="text-lg text-text-secondary">
          Got any questions or comments, or just want to say hi?<br />Drop by on
          my email!
        </p>
      </div>
    </div>
  </Container>
</PageLayout>

<script is:inline data-astro-rerun>
  /** Create a progress indicator
   *  at the top */
  function createProgressBar() {
    // Create the main container div
    const progressContainer = document.createElement("div");
    progressContainer.className =
      "progress-container fixed top-0 z-50 h-1 w-full bg-background dark:bg-background-dark";

    // Create the progress bar div
    const progressBar = document.createElement("div");
    progressBar.className =
      "progress-bar h-1 w-0 bg-link dark:bg-link-dark transition-all duration-75 ease-out rounded-md";
    progressBar.id = "myBar";

    // Append the progress bar to the progress container
    progressContainer.appendChild(progressBar);

    // Append the progress container to the document body or any other desired parent element
    document.body.appendChild(progressContainer);
  }
  createProgressBar();

  /** Update the progress bar
   *  when user scrolls */
  function updateScrollProgress() {
    document.addEventListener("scroll", () => {
      const winScroll =
        document.body.scrollTop || document.documentElement.scrollTop;
      const height =
        document.documentElement.scrollHeight -
        document.documentElement.clientHeight;
      const scrolled = (winScroll / height) * 100;
      if (document) {
        const myBar = document.getElementById("myBar");
        if (myBar) {
          myBar.style.width = scrolled + "%";
        }
      }
    });
  }
  updateScrollProgress();

  /* Go to page start after page swap */
  document.addEventListener("astro:after-swap", () =>
    window.scrollTo({ left: 0, top: 0, behavior: "instant" }),
  );
</script>
