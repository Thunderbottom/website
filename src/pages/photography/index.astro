---
import { getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import PhotoCard from "@components/PhotoCard.astro";
import PhotoLightbox from "@components/PhotoLightbox.astro";
import { PHOTOGRAPHY } from "@lib/constants.ts";

const allPhotos = await getCollection("photography", ({ data }) => {
  return !data.draft;
});

const sortedPhotos = allPhotos.sort(
  (a, b) => new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf(),
);

// Group photos by year
const photosByYear = sortedPhotos.reduce(
  (acc, photo) => {
    const year = new Date(photo.data.date).getFullYear();
    if (!acc[year]) {
      acc[year] = [];
    }
    acc[year].push(photo);
    return acc;
  },
  {} as Record<number, typeof sortedPhotos>,
);

const years = Object.keys(photosByYear)
  .map(Number)
  .sort((a, b) => b - a);
---

<PageLayout
  title={PHOTOGRAPHY.TITLE}
  description={PHOTOGRAPHY.DESCRIPTION}
  currentPath="/photography/"
>
  <Container>
    <div class="space-y-12">
      <div class="animate">
        <h1 class="font-display text-2xl font-semibold text-text-primary">
          {PHOTOGRAPHY.TITLE}
        </h1>
      </div>

      <div class="space-y-12">
        {
          years.map((year) => (
            <section class="animate space-y-6">
              <div class="flex justify-end">
                <h2 class="font-display text-xl font-semibold text-text-primary">
                  {year}
                </h2>
              </div>

              <div class="space-y-4">
                {photosByYear[year].map((photo) => (
                  <PhotoCard entry={photo} />
                ))}
              </div>
            </section>
          ))
        }
      </div>

      {
        sortedPhotos.length === 0 && (
          <div class="animate text-center py-12">
            <p class="text-text-secondary">No photos found.</p>
          </div>
        )
      }
    </div>
  </Container>
  <PhotoLightbox />
</PageLayout>
